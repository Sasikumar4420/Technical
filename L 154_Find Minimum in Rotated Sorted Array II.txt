class Solution {
    public int findMin(int[] nums) {
        int start = 0;
        int end = nums.length - 1;

        while (start < end) {
            int mid = start + (end - start) / 2;

            // Compare mid with end to decide the direction
            if (nums[mid] < nums[end]) {
                end = mid; // Minimum must be in the left part or at mid
            } else if (nums[mid] > nums[end]) {
                start = mid + 1; // Minimum must be in the right part
            } else {
                // nums[mid] == nums[end], skip the duplicate
                end--;
            }
        }

        return nums[start]; // Start now points to the minimum
    }
}
